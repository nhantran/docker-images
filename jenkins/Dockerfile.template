FROM nhantran/oraclejdk
MAINTAINER Nhan Tran <tranphanquocnhan@gmail.com>

# Download and install Jenkins
RUN wget http://{{SOFT_REPO_IP}}/3rdparty/jenkins/{{JENKINS_VERSION}}/jenkins.war
RUN chmod 644 /opt/jenkins.war
RUN useradd -m jenkins

# Configure Jenkins
WORKDIR /home/jenkins

# Create .jenkins folder for Jenkins to host generated configs and data.
RUN mkdir .jenkins

ADD templates/config.xml /home/jenkins/.jenkins/config.xml
ADD templates/hudson.tasks.Maven.xml /home/jenkins/.jenkins/hudson.tasks.Maven.xml

RUN mkdir .jenkins/plugins
WORKDIR /home/jenkins/.jenkins/plugins

# Uncomment to enable Authentication via Active Directory
#RUN wget http://{{SOFT_REPO_IP}}/3rdparty/jenkins/plugins/active-directory/1.38/active-directory.hpi
#ADD templates/jenkins.security.QueueItemAuthenticatorConfiguration.xml /home/jenkins/.jenkins/jenkins.security.QueueItemAuthenticatorConfiguration.xml

# Install Git Plugin - Require git-client and scm-api to work
RUN wget http://{{SOFT_REPO_IP}}/3rdparty/jenkins/plugins/git-client/{{JK_GIT_CLIENT_VERSION}}/git-client.hpi
RUN wget http://{{SOFT_REPO_IP}}/3rdparty/jenkins/plugins/scm-api/{{JK_SCM_API_VERSION}}/scm-api.hpi
RUN wget http://{{SOFT_REPO_IP}}/3rdparty/jenkins/plugins/git/{{JK_GIT_VERSION}}/git.hpi
ADD templates/hudson.plugins.git.GitTool.xml /home/jenkins/.jenkins/hudson.plugins.git.GitTool.xml

# Install Artifactory plugin
RUN wget http://{{SOFT_REPO_IP}}/3rdparty/jenkins/plugins/artifactory/{{JK_ARTIFACTORY_VERSION}}/artifactory.hpi
ADD templates/org.jfrog.hudson.ArtifactoryBuilder.xml /home/jenkins/.jenkins/org.jfrog.hudson.ArtifactoryBuilder.xml

# Install Sonar Plugin
RUN wget http://{{SOFT_REPO_IP}}/3rdparty/jenkins/plugins/sonar/{{JK_SONAR_VERSION}}/sonar.hpi
ADD templates/sonar.xml /home/jenkins/.jenkins/sonar.xml
ADD templates/hudson.plugins.sonar.SonarPublisher.xml /home/jenkins/.jenkins/hudson.plugins.sonar.SonarPublisher.xml
ADD templates/hudson.plugins.sonar.SonarRunnerInstallation.xml /home/jenkins/.jenkins/hudson.plugins.sonar.SonarRunnerInstallation.xml

WORKDIR /home/jenkins
RUN chown -R jenkins:jenkins .jenkins/

# Download and install Maven versions for Jenkins
WORKDIR /opt

# Download and install Maven 3.1.1
RUN wget http://{{SOFT_REPO_IP}}/3rdparty/maven/apache-maven-3.1.1-bin.zip
RUN unzip apache-maven-3.1.1-bin.zip
RUN rm -f apache-maven-3.1.1-bin.zip
RUN chown -R jenkins:jenkins apache-maven-3.1.1

# Download and install Maven 3.0.5
RUN wget http://{{SOFT_REPO_IP}}/3rdparty/maven/apache-maven-3.0.5-bin.zip
RUN unzip apache-maven-3.0.5-bin.zip
RUN rm -f apache-maven-3.0.5-bin.zip
RUN chown -R jenkins:jenkins apache-maven-3.0.5

# Download and install Maven 2.2.1
RUN wget http://{{SOFT_REPO_IP}}/3rdparty/maven/apache-maven-2.2.1-bin.zip
RUN unzip apache-maven-2.2.1-bin.zip
RUN rm -f apache-maven-2.2.1-bin.zip
RUN chown -R jenkins:jenkins apache-maven-2.2.1

# Download and install Maven 2.0.9
RUN wget http://{{SOFT_REPO_IP}}/3rdparty/maven/apache-maven-2.0.9-bin.zip
RUN unzip apache-maven-2.0.9-bin.zip
RUN rm -f apache-maven-2.0.9-bin.zip
RUN chown -R jenkins:jenkins apache-maven-2.0.9

RUN ENC_PASSWD=$(echo $(sh /root/sharedpw) | base64 -) && sed -i -e "s/<databasePassword></<databasePassword>$ENC_PASSWD</g" /home/jenkins/.jenkins/hudson.plugins.sonar.SonarPublisher.xml
RUN ENC_PASSWD=$(echo $(sh /root/sharedpw) | base64 -) && sed -i -e "s/<sonarPassword></<sonarPassword>$ENC_PASSWD</g" /home/jenkins/.jenkins/hudson.plugins.sonar.SonarPublisher.xml

EXPOSE 8080

ADD templates/startJenkins.sh /home/jenkins/startJenkins.sh
RUN chown -R jenkins:jenkins /home/jenkins/startJenkins.sh
RUN chmod u+x /home/jenkins/startJenkins.sh

RUN echo "\n" >> /etc/supervisor/conf.d/supervisord.conf
RUN echo "[program:jenkins]" >> /etc/supervisor/conf.d/supervisord.conf
RUN echo "user=jenkins" >> /etc/supervisor/conf.d/supervisord.conf
RUN echo "command=/home/jenkins/startJenkins.sh" >> /etc/supervisor/conf.d/supervisord.conf

USER jenkins
RUN ssh-keygen -t rsa -N "" -f /home/jenkins/.ssh/id_rsa

USER root
RUN sed -i "s/#   StrictHostKeyChecking ask/    StrictHostKeyChecking no/g" /etc/ssh/ssh_config

CMD ["/usr/bin/supervisord"]